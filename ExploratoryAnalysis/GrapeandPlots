import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# Creat a learning Curve accuracy vs validation accuracy
plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.title('model accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['train', 'test'], loc='upper left')
plt.show()
# Creat a Learning Curve loss vs validation Loss
plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
plt.title('model loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['train', 'test'], loc='upper left')
plt.show()
# creat, visualized and print confusion matrix 
y_pred = model.predict(X_test)
y_pred = (y_pred >= 0.5)
#from sklearn.metrics import confusion_matrix
#cm = confusion_matrix(Y_test, y_pred)
#print(cm)
# calculate the accuray 
from sklearn.metrics import accuracy_score
score = accuracy_score(y_pred, Y_test)
print(score)
# Generate Classification Report
from sklearn.metrics import classification_report
target_names = ['Maintainability', 'Operability', 'Performance','Security','Usability']
print(classification_report(Y_test, y_pred, target_names=target_names))
